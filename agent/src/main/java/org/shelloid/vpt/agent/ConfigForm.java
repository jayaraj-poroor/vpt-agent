/*
 Copyright (c) Shelloid Systems LLP. All rights reserved.
 The use and distribution terms for this software are covered by the
 GNU General Public License 3.0 (http://www.gnu.org/copyleft/gpl.html)
 which can be found in the file LICENSE at the root of this distribution.
 By using this software in any fashion, you are agreeing to be bound by
 the terms of this license.
 You must not remove this notice, or any other, from this software.
 */
package org.shelloid.vpt.agent;

import org.shelloid.vpt.agent.util.Configurations;
import org.shelloid.vpt.agent.util.Configurations.ConfigParams;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/* @author Harikrishnan */
public class ConfigForm extends javax.swing.JFrame {
    
    private final boolean checkLockFile;

    public ConfigForm(boolean checkLockFile) {
        initComponents();
        this.checkLockFile = checkLockFile;
        deviceKey.setText(Configurations.get(ConfigParams.CLIENT_KEY));
        deviceSecret.setText(Configurations.get(ConfigParams.CLIENT_SECRET));
        boolean useProxySvr = Boolean.parseBoolean(Configurations.get(ConfigParams.USE_PROXY));
        useProxy.setSelected(useProxySvr);
        proxyPort.setEnabled(useProxySvr);
        proxyServer.setEnabled(useProxySvr);
        proxyPassword.setEnabled(useProxySvr);
        proxyUsername.setEnabled(useProxySvr);
        if (useProxySvr) {
            loadProxyConfigs();
        }
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation(dim.width / 2 - getSize().width / 2, dim.height / 2 - getSize().height / 2);
    }

    private void loadProxyConfigs() {
        proxyPort.setText(Configurations.get(ConfigParams.PROXY_PORT));
        proxyServer.setText(Configurations.get(ConfigParams.PROXY_SERVER));
        proxyUsername.setText(Configurations.get(ConfigParams.PRPXY_USERNAME));
        proxyPassword.setText(Configurations.get(ConfigParams.PRPXY_PASSWORD));
    }
    
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deviceKey = new javax.swing.JTextField();
        deviceSecret = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        useProxy = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        proxyServer = new javax.swing.JTextField();
        proxyPort = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        proxyUsername = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        proxyPassword = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Shelloid VPT Authentication");

        jLabel1.setText("Enter your device key");

        jLabel2.setText("Enter secret for the key");

        jButton2.setText("Save");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Cancel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        useProxy.setText("Use Proxy");
        useProxy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                useProxyItemStateChanged(evt);
            }
        });

        jLabel3.setText("Proxy Server");

        jLabel4.setText("Proxy Port");

        proxyServer.setEnabled(false);

        proxyPort.setEnabled(false);

        jLabel5.setText("Proxy Username");

        proxyUsername.setEnabled(false);

        jLabel6.setText("Proxy Password");

        proxyPassword.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(useProxy, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deviceKey)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 189, Short.MAX_VALUE)
                        .addComponent(jButton2))
                    .addComponent(deviceSecret)
                    .addComponent(proxyServer)
                    .addComponent(proxyPort)
                    .addComponent(proxyUsername)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(proxyPassword))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deviceKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deviceSecret, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(useProxy)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(4, 4, 4)
                .addComponent(proxyServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proxyPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proxyUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(proxyPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Configurations.put(Configurations.ConfigParams.CLIENT_KEY, deviceKey.getText());
        Configurations.put(Configurations.ConfigParams.CLIENT_SECRET, deviceSecret.getText());
        Configurations.put(Configurations.ConfigParams.USE_PROXY, useProxy.isSelected() + "");
        if (useProxy.isSelected()) {
            Configurations.put(ConfigParams.PROXY_SERVER, proxyServer.getText());
            Configurations.put(ConfigParams.PROXY_PORT, proxyPort.getText());
            Configurations.put(ConfigParams.PRPXY_USERNAME, proxyUsername.getText());
            Configurations.put(ConfigParams.PRPXY_PASSWORD, proxyPassword.getText());
        }
        Configurations.save();
        if (checkLockFile){
            try{
                App.lockFile();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "You have to restart Shelloid VPT Agent to apply the new changes");
            }
        }
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void useProxyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_useProxyItemStateChanged
        boolean enabled = (evt.getStateChange() == 1);
        proxyPassword.setEnabled(enabled);
        proxyUsername.setEnabled(enabled);
        proxyServer.setEnabled(enabled);
        proxyPort.setEnabled(enabled);
        if (enabled){
            loadProxyConfigs();
        }
    }//GEN-LAST:event_useProxyItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField deviceKey;
    private javax.swing.JTextField deviceSecret;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField proxyPassword;
    private javax.swing.JTextField proxyPort;
    private javax.swing.JTextField proxyServer;
    private javax.swing.JTextField proxyUsername;
    private javax.swing.JCheckBox useProxy;
    // End of variables declaration//GEN-END:variables
}
